from pyrogram import Client, filters, enums
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from pyrogram.errors.exceptions.bad_request_400 import MessageTooLong, PeerIdInvalid
from info import ADMINS, LOG_CHANNEL, SUPPORT_CHAT, MELCOW_NEW_USERS
from database.users_chats_db import db
from database.ia_filterdb import Media
from utils import get_size, temp, get_settings
from Script import script
from pyrogram.errors import ChatAdminRequired

"""-----------------------------------------https://t.me/GetTGLink/4179 --------------------------------------"""

@Client.on_message(filters.new_chat_members & filters.group)
async def save_group(bot, message):
    r_j_check = [u.id for u in message.new_chat_members]
    if temp.ME in r_j_check:
        if not await db.get_chat(message.chat.id):
            total=await bot.get_chat_members_count(message.chat.id)
            r_j = message.from_user.mention if message.from_user else "Anonymous" 
            await bot.send_message(LOG_CHANNEL, script.LOG_TEXT_G.format(message.chat.title, message.chat.id, total, r_j))       
            await db.add_chat(message.chat.id, message.chat.title)
        if message.chat.id in temp.BANNED_CHATS:
            # Inspired from a boat of a banana tree
            buttons = [[
                InlineKeyboardButton('ЁЯМРроЖродро░ро╡рпБ', url=f'https://t.me/MR_OTT_REQUEST')
            ]]
            reply_markup=InlineKeyboardMarkup(buttons)
            k = await message.reply(
                text='<b>роЕро░роЯрпНроЯрпИ роЕройрпБроородро┐роХрпНроХрокрпНрокроЯро╡ро┐ро▓рпНро▓рпИ ЁЯРЮ\n\nроОройродрпБ роиро┐ро░рпНро╡ро╛роХро┐роХро│рпН роОройрпНройрпИ роЗроЩрпНроХрпБ рокрогро┐рокрпБро░ро┐роп ро╡ро┐роЯро╛рооро▓рпН родроЯрпБродрпНродрпБро│рпНро│ройро░рпН! роирпАроЩрпНроХро│рпН роЕродрпИрокрпН рокро▒рпНро▒ро┐ роорпЗро▓рпБроорпН роЕро▒ро┐роп ро╡ро┐ро░рпБроорпНрокро┐ройро╛ро▓рпН, роЙро░ро┐роорпИропро╛ро│ро░рпИродрпН родрпКроЯро░рпНрокрпБ роХрпКро│рпНро│ро╡рпБроорпН...</b>',
                reply_markup=reply_markup,
            )

            try:
                await k.pin()
            except:
                pass
            await bot.leave_chat(message.chat.id)
            return
        buttons = [[
            InlineKeyboardButton('роОройрпНройрпИ роОрокрпНрокроЯро┐ рокропройрпНрокроЯрпБродрпНродрпБро╡родрпБ', url=f"https://t.me/{temp.U_NAME}?start=help"),
            InlineKeyboardButton('ЁЯУв роОройрпНройрпИ роОрокрпНрокроЯро┐ рокропройрпНрокроЯрпБродрпНродрпБро╡родрпБ ЁЯУв', url='https://t.me/MROTTTamilOffl')
        ]]
        reply_markup=InlineKeyboardMarkup(buttons)
        await message.reply_text(
            text=f"<b>тА║тА║ роОройрпНройрпИ роЙроЩрпНроХро│рпН роХрпБро┤рпБро╡ро┐ро▓рпН роЪрпЗро░рпНродрпНродродро▒рпНроХрпБ роиройрпНро▒ро┐. {message.chat.title} тЭгя╕П\nтА║тА║ роОройрпНройрпИ роиро┐ро░рпНро╡ро╛роХро┐ропро╛роХрпНроХ рооро▒роХрпНроХро╛родрпЗ.\nтА║тА║ роОройрпНройрпИрокрпН рокропройрпНрокроЯрпБродрпНродрпБро╡родро┐ро▓рпН роПродрпЗройрпБроорпН роЪроирпНродрпЗроХроорпН роЗро░рпБроирпНродро╛ро▓рпН роХрпАро┤рпЗ роЙро│рпНро│ рокрпКродрпНродро╛ройрпИроХрпН роХро┐ро│ро┐роХрпН роЪрпЖропрпНроХ..тЪбтЪб.</b>",
            reply_markup=reply_markup)
    else:
        settings = await get_settings(message.chat.id)
        if settings["welcome"]:
            for u in message.new_chat_members:
                if (temp.MELCOW).get('welcome') is not None:
                    try:
                        await (temp.MELCOW['welcome']).delete()
                    except:
                        pass
                temp.MELCOW['welcome'] = await message.reply_video(
                video="https://telegra.ph/file/03691465baa774e46506d.mp4",                                               
                                                 caption=f'<b>ро╡рогрпНрогроХроорпН, {u.mention} ЁЯСЛЁЯП╗\nроОроЩрпНроХро│рпН роХрпБро┤рпБро╡ро┐ро▒рпНроХрпБ ро╡ро░ро╡рпЗро▒рпНроХро┐ро▒рпЛроорпН {message.chat.title}\n\n роЗроирпНрод рокро╛роЯрпН роЕро▓рпНро▓родрпБ роХрпБро┤рпБ роЙроЩрпНроХро│рпН роХро▓рпНро╡ро┐ роирпЛроХрпНроХродрпНродро┐ро▒рпНроХро╛роХ роЙро░рпБро╡ро╛роХрпНроХрокрпНрокроЯрпНроЯродрпБ. роОройро╡рпЗ роЙроЩрпНроХро│рпН роирогрпНрокро░рпНроХро│рпБроЯройрпН рокроХро┐ро░рпНроирпНродрпБ роХрпКро│рпНро│рпБроЩрпНроХро│рпН рооро▒рпНро▒рпБроорпН роЕро▒ро┐ро╡рпИ роЕро▒ро┐роирпНродрпБ роХрпКро│рпНро│рпБроЩрпНроХро│рпН ЁЯСН</b>',

                                                 reply_markup=InlineKeyboardMarkup( [ [ InlineKeyboardButton('ЁЯФе  тЖн рокроХро┐ро░ро╡рпБроорпН тЖн  ЁЯФе', url='https://t.me/+Y92lcOFkdkIzZjll') ]

                                                                                    ] )

                )

@Client.on_message(filters.command('leave') & filters.user(ADMINS))
async def leave_a_chat(bot, message):
    if len(message.command) == 1:
        return await message.reply('Give me a chat id')
    chat = message.command[1]
    try:
        chat = int(chat)
    except:
        chat = chat
    try:
        buttons = [[
            InlineKeyboardButton('ЁЯМРроЖродро░ро╡рпБ', url=f'https://t.me/MR_OTT_REQUEST')
        ]]
        reply_markup=InlineKeyboardMarkup(buttons)
        await bot.send_message(
            chat_id=chat,
            text='<<b>ро╡рогроХрпНроХроорпН роирогрпНрокро░рпНроХро│рпЗ, \nроОройродрпБ роиро┐ро░рпНро╡ро╛роХро┐ роОройрпНройрпИ роХрпБро┤рпБро╡ро┐ро▓ро┐ро░рпБроирпНродрпБ ро╡рпЖро│ро┐ропрпЗро▒роЪрпН роЪрпКройрпНройро╛ро░рпН, роЕродройро╛ро▓рпН роиро╛ройрпН роЪрпЖро▓рпНроХро┐ро▒рпЗройрпН! роирпАроЩрпНроХро│рпН роОройрпНройрпИ роорпАрогрпНроЯрпБроорпН роЪрпЗро░рпНроХрпНроХ ро╡ро┐ро░рпБроорпНрокро┐ройро╛ро▓рпН роОройродрпБ роЖродро░ро╡рпБ роХрпБро┤рпБро╡рпИ родрпКроЯро░рпНрокрпБ роХрпКро│рпНро│ро╡рпБроорпН.</b>',
            reply_markup=reply_markup,
        )

        await bot.leave_chat(chat)
        await message.reply(f"left the chat `{chat}`")
    except Exception as e:
        await message.reply(f'Error - {e}')

@Client.on_message(filters.command('disable') & filters.user(ADMINS))
async def disable_chat(bot, message):
    if len(message.command) == 1:
        return await message.reply('Give me a chat id')
    r = message.text.split(None)
    if len(r) > 2:
        reason = message.text.split(None, 2)[2]
        chat = message.text.split(None, 2)[1]
    else:
        chat = message.command[1]
        reason = "роХро╛ро░рогроорпН роОродрпБро╡рпБроорпН ро╡ро┤роЩрпНроХрокрпНрокроЯро╡ро┐ро▓рпНро▓рпИ"
    try:
        chat_ = int(chat)
    except:
        return await message.reply('роЪро░ро┐ропро╛рой роЕро░роЯрпНроЯрпИ роРроЯро┐ропрпИроХрпН роХрпКроЯрпБроЩрпНроХро│рпН')
    cha_t = await db.get_chat(int(chat_))
    if not cha_t:
        return await message.reply("DB роЗро▓рпН роЕро░роЯрпНроЯрпИ роЗро▓рпНро▓рпИ")
    if cha_t['is_disabled']:
        return await message.reply(f"роЗроирпНрод роЕро░роЯрпНроЯрпИ роПро▒рпНроХройро╡рпЗ роорпБроЯроХрпНроХрокрпНрокроЯрпНроЯрпБро│рпНро│родрпБ:\nроХро╛ро░рогроорпН-<code> {cha_t['reason']} </code>")
    await db.disable_chat(int(chat_), reason)
    temp.BANNED_CHATS.append(int(chat_))
    await message.reply('роЕро░роЯрпНроЯрпИ ро╡рпЖро▒рпНро▒ро┐роХро░рооро╛роХ роорпБроЯроХрпНроХрокрпНрокроЯрпНроЯродрпБ')
    try:
        buttons = [[
            InlineKeyboardButton('ЁЯМРроЖродро░ро╡', url=f'https://t.me/MR_OTT_REQUEST')
        ]]
        reply_markup=InlineKeyboardMarkup(buttons)
        await bot.send_message(
            chat_id=chat_, 
            text=f'<b>ро╡рогроХрпНроХроорпН роирогрпНрокро░рпНроХро│рпЗ, \nроОройродрпБ роиро┐ро░рпНро╡ро╛роХро┐ роОройрпНройрпИ роХрпБро┤рпБро╡ро┐ро▓ро┐ро░рпБроирпНродрпБ ро╡рпЖро│ро┐ропрпЗро▒роЪрпН роЪрпКройрпНройро╛ро░рпН, роЕродройро╛ро▓рпН роиро╛ройрпН роЪрпЖро▓рпНроХро┐ро▒рпЗройрпН! роирпАроЩрпНроХро│рпН роОройрпНройрпИ роорпАрогрпНроЯрпБроорпН роЪрпЗро░рпНроХрпНроХ ро╡ро┐ро░рпБроорпНрокро┐ройро╛ро▓рпН роОройродрпБ роЖродро░ро╡рпБ роХрпБро┤рпБро╡рпИ родрпКроЯро░рпНрокрпБ роХрпКро│рпНро│ро╡рпБроорпН.</b> \nроХро╛ро░рогроорпН : <code>{reason}</code>',
            reply_markup=reply_markup)
        await bot.leave_chat(chat_)
    except Exception as e:
        await message.reply(f"Error - {e}")


@Client.on_message(filters.command('enable') & filters.user(ADMINS))
async def re_enable_chat(bot, message):
    if len(message.command) == 1:
        return await message.reply('Give me a chat id')
    chat = message.command[1]
    try:
        chat_ = int(chat)
    except:
        return await message.reply('роЪро░ро┐ропро╛рой роЕро░роЯрпНроЯрпИ роРроЯро┐ропрпИроХрпН роХрпКроЯрпБроЩрпНроХро│рпН')
    sts = await db.get_chat(int(chat))
    if not sts:
        return await message.reply("DB роЗро▓рпН роЕро░роЯрпНроЯрпИ роЗро▓рпНро▓рпИ!")
    if not sts.get('is_disabled'):
        return await message.reply('роЗроирпНрод роЕро░роЯрпНроЯрпИ роЗройрпНройрпБроорпН роорпБроЯроХрпНроХрокрпНрокроЯро╡ро┐ро▓рпНро▓рпИ.')
    await db.re_enable_chat(int(chat_))
    temp.BANNED_CHATS.remove(int(chat_))
    await message.reply("CроЕро░роЯрпНроЯрпИ ро╡рпЖро▒рпНро▒ро┐роХро░рооро╛роХ роорпАрогрпНроЯрпБроорпН роЗропроХрпНроХрокрпНрокроЯрпНроЯродрпБ")


@Client.on_message(filters.command('stats') & filters.incoming)
async def get_ststs(bot, message):
    rju = await message.reply('рокрпБро│рпНро│ро┐ро╡ро┐ро╡ро░роЩрпНроХро│рпИрокрпН рокрпЖро▒рпБроХро┐ро▒родрпБ..')
    total_users = await db.total_users_count()
    totl_chats = await db.total_chat_count()
    files = await Media.count_documents()
    size = await db.get_db_size()
    free = 536870912 - size
    size = get_size(size)
    free = get_size(free)
    await rju.edit(script.STATUS_TXT.format(files, total_users, totl_chats, size, free))


# a function for trespassing into others groups, Inspired by a Vazha
# Not to be used , But Just to showcase his vazhatharam.
# @Client.on_message(filters.command('invite') & filters.user(ADMINS))
async def gen_invite(bot, message):
    if len(message.command) == 1:
        return await message.reply('Give me a chat id')
    chat = message.command[1]
    try:
        chat = int(chat)
    except:
        return await message.reply('Give Me A Valid Chat ID')
    try:
        link = await bot.create_chat_invite_link(chat)
    except ChatAdminRequired:
        return await message.reply("роЕро┤рпИрокрпНрокрпБ роЗрогрпИрокрпНрокрпБ роЙро░рпБро╡ро╛роХрпНроХроорпН родрпЛро▓рпНро╡ро┐ропроЯрпИроирпНродродрпБ, роОройроХрпНроХрпБ рокрпЛродрпБрооро╛рой роЙро░ро┐роорпИроХро│рпН роЗро▓рпНро▓рпИ")
    except Exception as e:
        return await message.reply(f'ErrроЙроЩрпНроХро│рпН роЕро┤рпИрокрпНрокрпБ роЗрогрпИрокрпНрокрпБ роЗродрпЛor {e}')
    await message.reply(f'Here is your Invite Link {link.invite_link}')

@Client.on_message(filters.command('ban') & filters.user(ADMINS))
async def ban_a_user(bot, message):
    # https://t.me/GetTGLink/4185
    if len(message.command) == 1:
        return await message.reply('роОройроХрпНроХрпБ роТро░рпБ рокропройро░рпН роРроЯро┐ / рокропройро░рпН рокрпЖропро░рпИроХрпН роХрпКроЯрпБроЩрпНроХро│рпН')
    r = message.text.split(None)
    if len(r) > 2:
        reason = message.text.split(None, 2)[2]
        chat = message.text.split(None, 2)[1]
    else:
        chat = message.command[1]
        reason = "роХро╛ро░рогроорпН роОродрпБро╡рпБроорпН ро╡ро┤роЩрпНроХрокрпНрокроЯро╡ро┐ро▓рпНро▓рпИ"
    try:
        chat = int(chat)
    except:
        pass
    try:
        k = await bot.get_users(chat)
    except PeerIdInvalid:
        return await message.reply("роЗродрпБ родро╡ро▒ро╛рой рокропройро░рпН, роиро╛ройрпН роЕро╡ро░рпИ роЗродро▒рпНроХрпБ роорпБройрпНрокрпБ роЪроирпНродро┐родрпНродро┐ро░рпБроХрпНроХро┐ро▒рпАро░рпНроХро│ро╛ роОройрпНрокродрпИ роЙро▒рпБродро┐рокрпНрокроЯрпБродрпНродро┐роХрпН роХрпКро│рпНро│рпБроЩрпНроХро│рпН.")
    except IndexError:
        return await message.reply("роЗродрпБ роТро░рпБ роЪрпЗройро▓ро╛роХ роЗро░рпБроХрпНроХро▓ро╛роорпН, роЗродрпБ роТро░рпБ рокропройро░рпН роОройрпНрокродрпИ роЙро▒рпБродро┐рокрпНрокроЯрпБродрпНродро╡рпБроорпН.")
    except Exception as e:
        return await message.reply(f'Error - {e}')
    else:
        jar = await db.get_ban_status(k.id)
        if jar['is_banned']:
            return await message.reply(f"{k.mention} роПро▒рпНроХройро╡рпЗ родроЯрпИ роЪрпЖропрпНропрокрпНрокроЯрпНроЯрпБро│рпНро│родрпБ\nроХро╛ро░рогроорпН: {jar['ban_reason']}")
        await db.ban_user(k.id, reason)
        temp.BANNED_USERS.append(k.id)
        await message.reply(f"ро╡рпЖро▒рпНро▒ро┐роХро░рооро╛роХ родроЯрпИ роЪрпЖропрпНропрокрпНрокроЯрпНроЯродрпБ {k.mention}")


    
@Client.on_message(filters.command('unban') & filters.user(ADMINS))
async def unban_a_user(bot, message):
    if len(message.command) == 1:
        return await message.reply('роОройроХрпНроХрпБ роТро░рпБ рокропройро░рпН роРроЯро┐ / рокропройро░рпН рокрпЖропро░рпИроХрпН роХрпКроЯрпБроЩрпНроХро│рпН')
    r = message.text.split(None)
    if len(r) > 2:
        reason = message.text.split(None, 2)[2]
        chat = message.text.split(None, 2)[1]
    else:
        chat = message.command[1]
        reason = "роХро╛ро░рогроорпН роОродрпБро╡рпБроорпН ро╡ро┤роЩрпНроХрокрпНрокроЯро╡ро┐ро▓рпНро▓"
    try:
        chat = int(chat)
    except:
        pass
    try:
        k = await bot.get_users(chat)
    except PeerIdInvalid:
        return await message.reply("роЗродрпБ родро╡ро▒ро╛рой рокропройро░рпН, роиро╛ройрпН роЕро╡ро░рпИ роЗродро▒рпНроХрпБ роорпБройрпНрокрпБ роЪроирпНродро┐родрпНродро┐ро░рпБроХрпНроХро┐ро▒рпАро░рпНроХро│ро╛ роОройрпНрокродрпИ роЙро▒рпБродро┐рокрпНрокроЯрпБродрпНродро┐роХрпН роХрпКро│рпНро│рпБроЩрпНроХро│рпН.")
    except IndexError:
        return await message.reply("роЗродрпБ роТро░рпБ роЪрпЗройро▓ро╛роХ роЗро░рпБроХрпНроХро▓ро╛роорпН, роЗродрпБ роТро░рпБ рокропройро░рпН роОройрпНрокродрпИ роЙро▒рпБродро┐рокрпНрокроЯрпБродрпНродро╡рпБроорпН.")
    except Exception as e:
        return await message.reply(f'Error - {e}')
    else:
        jar = await db.get_ban_status(k.id)
        if not jar['is_banned']:
            return await message.reply(f"{k.mention} is not yet banned.")
        await db.remove_ban(k.id)
        temp.BANNED_USERS.remove(k.id)
        await message.reply(f"родроЯрпИ роирпАроХрпНроХрокрпНрокроЯрпНроЯродрпБ {k.mention}")


    
@Client.on_message(filters.command('users') & filters.user(ADMINS))
async def list_users(bot, message):
    # https://t.me/GetTGLink/4184
    raju = await message.reply('рокропройро░рпНроХро│ро┐ройрпН рокроЯрпНроЯро┐ропро▓рпИрокрпН рокрпЖро▒рпБродро▓рпН')
    users = await db.get_all_users()
    out = "DB роЗро▓рпН роЪрпЗрооро┐роХрпНроХрокрпНрокроЯрпНроЯ рокропройро░рпНроХро│рпН:\n\n"
    async for user in users:
        out += f"<a href=tg://user?id={user['id']}>{user['name']}</a>"
        if user['ban_status']['is_banned']:
            out += '( Banned User )'
        out += '\n'
    try:
        await raju.edit_text(out)
    except MessageTooLong:
        with open('users.txt', 'w+') as outfile:
            outfile.write(out)
        await message.reply_document('users.txt', caption="List Of Users")

@Client.on_message(filters.command('chats') & filters.user(ADMINS))
async def list_chats(bot, message):
    raju = await message.reply('Getting List Of chats')
    chats = await db.get_all_chats()
    out = "DB роЗро▓рпН роЪрпЗрооро┐роХрпНроХрокрпНрокроЯрпНроЯ рокропройро░рпНроХро│рпН:\n\n"
    async for chat in chats:
        out += f"**Title:** `{chat['title']}`\n**- ID:** `{chat['id']}`"
        if chat['chat_status']['is_disabled']:
            out += '( Disabled Chat )'
        out += '\n'
    try:
        await raju.edit_text(out)
    except MessageTooLong:
        with open('chats.txt', 'w+') as outfile:
            outfile.write(out)
        await message.reply_document('chats.txt', caption="List Of Chats")
